{"ast":null,"code":"import _toConsumableArray from \"/home/aven/Prasanta Hansda/Project work/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/aven/Prasanta Hansda/Project work/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/aven/Prasanta Hansda/Project work/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\"; //rendering jsx file.\n\nfunction App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      items = _useState4[0],\n      setItems = _useState4[1]; // empty array for holding the new value of item.\n\n\n  function handleChange(event) {\n    var newValue = event.target.value; // for having the input text from the form input\n\n    setInputText(newValue);\n  } //for adding the item we need to get hold of the prevValues and then update them by the new values.\n\n\n  function addItem() {\n    setItems(function (prevItems) {\n      return [].concat(_toConsumableArray(prevItems), [inputText]);\n    });\n    setInputText(\"\");\n  } //For deleting the item from the list we need to tap into the id of the item which is rendered by the map function\n\n\n  function deleteItem(id) {\n    setItems(function (prevItems) {\n      return prevItems.filter(function (todoItem, index) {\n        return index !== id;\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"To-Do List\")), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"text\",\n    value: inputText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, items.map(function (todoItem, index) {\n    return React.createElement(ToDoItem, {\n      key: index,\n      id: index,\n      Text: todoItem,\n      onDelete: deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/aven/Prasanta Hansda/Project work/src/components/App.jsx"],"names":["React","useState","ToDoItem","App","inputText","setInputText","items","setItems","handleChange","event","newValue","target","value","addItem","prevItems","deleteItem","id","filter","todoItem","index","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;;AACnC,SAASC,GAAT,GAAe;AAAA,kBACqBF,QAAQ,CAAC,EAAD,CAD7B;AAAA;AAAA,MACNG,SADM;AAAA,MACKC,YADL;;AAAA,mBAEaJ,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAENK,KAFM;AAAA,MAECC,QAFD,kBAE2B;;;AAExC,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B,CAD2B,CACU;;AACrCP,IAAAA,YAAY,CAACK,QAAD,CAAZ;AACD,GAPY,CAQb;;;AACA,WAASG,OAAT,GAAmB;AACjBN,IAAAA,QAAQ,CAAC,UAAAO,SAAS,EAAI;AACpB,0CAAWA,SAAX,IAAsBV,SAAtB;AACD,KAFO,CAAR;AAGAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAdY,CAeb;;;AACA,WAASU,UAAT,CAAoBC,EAApB,EAAwB;AACtBT,IAAAA,QAAQ,CAAC,UAAAO,SAAS,EAAI;AACpB,aAAOA,SAAS,CAACG,MAAV,CAAiB,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAC3C,eAAOA,KAAK,KAAKH,EAAjB;AACD,OAFM,CAAP;AAGD,KAJO,CAAR;AAKD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAER,YAAjB;AAA+B,IAAA,IAAI,EAAC,MAApC;AAA2C,IAAA,KAAK,EAAEJ,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAES,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAFF,CAJF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACc,GAAN,CAAU,UAACF,QAAD,EAAWC,KAAX;AAAA,WACT,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,EAAE,EAAEA,KAFN;AAGE,MAAA,IAAI,EAAED,QAHR;AAIE,MAAA,QAAQ,EAAEH,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAV,CADH,CADF,CAVF,CADF;AAyBD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\"; //rendering jsx file.\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]); // empty array for holding the new value of item.\n\n  function handleChange(event) {\n    const newValue = event.target.value; // for having the input text from the form input\n    setInputText(newValue);\n  }\n  //for adding the item we need to get hold of the prevValues and then update them by the new values.\n  function addItem() {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n    setInputText(\"\");\n  }\n  //For deleting the item from the list we need to tap into the id of the item which is rendered by the map function\n  function deleteItem(id) {\n    setItems(prevItems => {\n      return prevItems.filter((todoItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              Text={todoItem}\n              onDelete={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}